const canvas=document.getElementById("gameCanvas"),ctx=canvas.getContext("2d"),effectCanvas=document.getElementById("effectCanvas"),effectCtx=effectCanvas.getContext("2d");effectCanvas.width=canvas.width,effectCanvas.height=canvas.height,document.body.appendChild(effectCanvas),canvas.width=window.innerWidth,canvas.height=window.innerHeight,effectCanvas.width=window.innerWidth,effectCanvas.height=window.innerHeight;const gameFieldWidth=5*window.innerWidth,gameFieldHeight=5*window.innerHeight,pointsDensity=4e-4,repulsionStrength=5e3,repulsionRadius=10,spaceBuffer=10,bearMargin=400,fixedBearCount=10,STROKE_WIDTH=15,MAX_ANGLE_DEVIATION=Math.PI/10,STROKE_GRID_SIZE=90,SEGMENT_COUNT=3,SEGMENT_LENGTH=50,CURVATURE=5,MAX_OFFSET=15,COLORS=["#80bd5e","#f7ee89"],rotationMultiplier=1;export const sprites=[{t:"./images/Bear1.png",i:10,scale:.3,o:!0},{t:"./images/TreeEl.png",i:3,scale:.5},{t:"./images/TreeDub.png",i:3,scale:.5},{t:"./images/TreeBereza.png",i:11,scale:.5},{t:"./images/Bush11.png",i:11,scale:.4},{t:"./images/Bush12.png",i:11,scale:.4},{t:"./images/Bush13.png",i:11,scale:.5},{t:"./images/Stone11.png",i:11,scale:.3},{t:"./images/Stone12.png",i:1,scale:.3}];const canvasState={v:[],points:[],offsetX:0,offsetY:0,S:!1,h:0,u:0,velocityX:0,velocityY:0,l:.9,messages:[],m:[],M:[]};function generatePoints(){const a=gameFieldWidth*gameFieldHeight,t=Math.floor(a*pointsDensity),e=canvasState.v.reduce(((a,t)=>a+t.i),0);let n=0;for(let a=0;a<t;a++){let a=Math.random()*e,t=0;for(let e of canvasState.v)if(t+=e.i,a<t){let a,t,s,c;if(e.o){if(n>=fixedBearCount)break;const i=e.p.width*e.scale;e.p.height,e.scale;a=bearMargin,t=gameFieldWidth-bearMargin,s=bearMargin,c=gameFieldHeight-bearMargin;let o,v=!1;for(let n=0;n<100;n++){const n=Math.random()*(t-a)+a,r=Math.random()*(c-s)+s;if(v=!canvasState.points.some((a=>{if(!a.F.o)return!1;return Math.hypot(n-a.x,r-a.y)<2*i})),v){o={x:n,y:r,F:e,A:Math.random()<.5,rotationAngle:0,T:(.02*Math.random()-.01)*rotationMultiplier,C:0,R:!1,B:1,I:1,O:!1};break}}v&&(canvasState.points.push(o),n++)}else{a=0,t=gameFieldWidth,s=0,c=gameFieldHeight;const n={x:Math.random()*(t-a)+a,y:Math.random()*(c-s)+s,F:e,A:Math.random()<.5,rotationAngle:0,T:0,C:0,R:!1,B:1,I:1,O:!1};canvasState.points.push(n)}break}}canvasState.points=canvasState.points.filter(((a,t,e)=>!a.F.o||!e.some(((e,n)=>{if(t===n||!e.F.o)return!1;return Math.hypot(a.x-e.x,a.y-e.y)<a.F.p.width*a.F.scale*2}))));canvasState.points=canvasState.points.filter(((a,t,e)=>!!a.F.o||!e.some((t=>{if(!t.F.o)return!1;const e=t.F.p.width*t.F.scale,n=t.F.p.height*t.F.scale,s=a.F.p.width*a.F.scale,c=a.F.p.height*a.F.scale;return Math.max(0,Math.min(t.x+e/2,a.x+s/2)-Math.max(t.x-e/2,a.x-s/2))*Math.max(0,Math.min(t.y+n/2,a.y+c/2)-Math.max(t.y-n/2,a.y-c/2))>.8*(e*n)})))),console.log("Bears: ",canvasState.points.filter((a=>a.F.o)))}function createCurveSegment(a,t,e,n,s,c,i){const o=i?.75*s:s,v=t+Math.cos(n)*(o/2)+c*Math.cos(n+Math.PI/4),r=e+Math.sin(n)*(o/2)+c*Math.sin(n+Math.PI/4),S=t+Math.cos(n)*(o/2)+c*Math.cos(n-Math.PI/4),h=e+Math.sin(n)*(o/2)+c*Math.sin(n-Math.PI/4),d=t+Math.cos(n)*o,u=e+Math.sin(n)*o;return a.bezierCurveTo(v,r,S,h,d,u),{_:d,k:u}}function generateStrokeWithType(a,t,e="default"){const n=new Path2D;n.moveTo(a,t);let s=a,c=t,i=0;for(let a=0;a<SEGMENT_COUNT;a++){let a,t=!1;"tight"===e?(a=i+(Math.random()*MAX_ANGLE_DEVIATION*2-MAX_ANGLE_DEVIATION),t=!0):a=i+(Math.random()*MAX_ANGLE_DEVIATION*2-MAX_ANGLE_DEVIATION);const{_:o,k:v}=createCurveSegment(n,s,c,a,SEGMENT_LENGTH,CURVATURE,t);s=o,c=v,i=a}return n}function generateStroke(a,t){const e=["default","tight"];return generateStrokeWithType(a,t,e[Math.floor(Math.random()*e.length)])}function initializeBackground(){const a=Math.ceil(gameFieldWidth/90),t=Math.ceil(gameFieldHeight/90);for(let e=0;e<t;e++)for(let t=0;t<a;t++){const a=90*e+45,n=90*t+45+15*(2*Math.random()-1),s=a+15*(2*Math.random()-1),c=COLORS[Math.floor(Math.random()*COLORS.length)],i=generateStroke(n,s);canvasState.M.push({x:n,y:s,path:i,color:c})}}function drawBackground(){ctx.clearRect(0,0,canvas.width,canvas.height),canvasState.M.forEach((a=>{ctx.save(),ctx.translate(a.x-canvasState.offsetX,a.y-canvasState.offsetY),ctx.strokeStyle=a.color,ctx.lineWidth=STROKE_WIDTH,ctx.lineCap="round",ctx.stroke(a.path),ctx.restore()}))}function render(){ctx.clearRect(0,0,canvas.width,canvas.height),drawBackground();const a=canvas.width/2+canvasState.offsetX,t=canvas.height/2+canvasState.offsetY;canvasState.points.sort(((a,t)=>a.y+a.F.p.height*a.F.scale/2-(t.y+t.F.p.height*t.F.scale/2)));let e=0;for(let n of canvasState.points){const{x:s,y:c,F:i,A:o,C:v,R:r,B:S,I:h,O:d}=n;if(i.o){e++,n.rotationAngle+=n.T;const i=Math.PI/18;n.rotationAngle>i?(n.rotationAngle=i,n.T*=-1):n.rotationAngle<-i&&(n.rotationAngle=-i,n.T*=-1);const o=Math.hypot(a-s,t-c);o<=100&&!d?(n.R=!0,n.O=!0):o>100&&(n.O=!1),r&&(n.C+=S*h,n.C>=10?n.B=-1:n.C<=0&&(n.C=0,n.R=!1,n.B=1))}ctx.save(),ctx.translate(s-canvasState.offsetX,c-canvasState.offsetY-(i.o?v:0)),i.o&&ctx.rotate(n.rotationAngle),o&&ctx.scale(-1,1),ctx.drawImage(i.p,-i.p.width*i.scale/2,-i.p.height*i.scale/2,i.p.width*i.scale,i.p.height*i.scale),ctx.restore()}document.getElementById("bearCount").innerText=e;for(let a of canvasState.messages){ctx.save(),ctx.globalAlpha=a.opacity,ctx.font="bold 36px Arial";const t=ctx.measureText(a.text).width;ctx.fillStyle="#FFF",ctx.fillText(a.text,a.x-canvasState.offsetX-t/2,a.y-canvasState.offsetY+a.offsetY),ctx.strokeStyle="#FFF3",ctx.lineWidth=.5,ctx.strokeText(a.text,a.x-canvasState.offsetX-t/2,a.y-canvasState.offsetY+a.offsetY),ctx.restore()}canvasState.S||(canvasState.offsetX-=canvasState.velocityX,canvasState.offsetY-=canvasState.velocityY,canvasState.velocityX*=canvasState.l,canvasState.velocityY*=canvasState.l,Math.abs(canvasState.velocityX)<.1&&(canvasState.velocityX=0),Math.abs(canvasState.velocityY)<.1&&(canvasState.velocityY=0));const n=gameFieldWidth,s=gameFieldHeight;canvasState.offsetX<0?(canvasState.offsetX=0,canvasState.velocityX=0):canvasState.offsetX>n-canvas.width&&(canvasState.offsetX=n-canvas.width,canvasState.velocityX=0),canvasState.offsetY<0?(canvasState.offsetY=0,canvasState.velocityY=0):canvasState.offsetY>s-canvas.height&&(canvasState.offsetY=s-canvas.height,canvasState.velocityY=0),requestAnimationFrame(render)}function loadSprites(a){return Promise.all(a.map((a=>new Promise(((t,e)=>{const n=new Image;n.src=a.t,n.onload=()=>t({...a,p:n}),n.onerror=e})))))}function showBearFoundMessage(a,t){const e={text:"+1 очко",x:a,y:t,opacity:1,offsetY:0};canvasState.messages.push(e);const n=()=>{if(e.offsetY-=1,e.opacity-=.01,e.opacity<=0){const a=canvasState.messages.indexOf(e);a>-1&&canvasState.messages.splice(a,1)}else requestAnimationFrame(n)};requestAnimationFrame(n)}function applyInertia(){if(!canvasState.S){canvasState.offsetX-=canvasState.velocityX,canvasState.offsetY-=canvasState.velocityY,canvasState.velocityX*=canvasState.l,canvasState.velocityY*=canvasState.l;const a=gameFieldWidth-canvas.width,t=gameFieldHeight-canvas.height;canvasState.offsetX=Math.max(0,Math.min(canvasState.offsetX,a)),canvasState.offsetY=Math.max(0,Math.min(canvasState.offsetY,t)),Math.abs(canvasState.velocityX)<.1&&(canvasState.velocityX=0),Math.abs(canvasState.velocityY)<.1&&(canvasState.velocityY=0)}requestAnimationFrame(applyInertia)}function triggerFlashEffect(){const a=document.createElement("div");a.className="flash-effect",document.body.appendChild(a),a.addEventListener("animationend",(()=>{document.body.removeChild(a)}))}function triggerRedBorderEffect(){const a=document.createElement("div");a.className="red-border",document.body.appendChild(a),a.addEventListener("animationend",(()=>{document.body.removeChild(a)}))}function checkIfAllBearsFound(){0===canvasState.points.filter((a=>a.F.o)).length&&showWinMessage()}function createModal(a,t,e){const n=document.getElementById("overlay");n.style.display="block";const s=document.createElement("div");s.className="modal",s.innerHTML=`\n        <p class="modal-text">${a}</p>\n        <button class="modal-button">${t}</button>\n    `,document.body.appendChild(s);s.querySelector(".modal-button").addEventListener("click",(()=>{document.body.removeChild(s),n.style.display="none","function"==typeof e&&e()}))}function showWelcomeMessage(){createModal("Фотографируй медведей!","Старт",(function(){}))}function showWinMessage(){createModal("Поздравляем! Вы нашли всех медведей!","Перезапустить игру",restartGame)}function restartGame(){canvasState.points=[],generatePoints()}console.log("canvasState: ",canvasState),loadSprites(sprites).then((a=>{canvasState.v=a,showWelcomeMessage(),generatePoints(),initializeBackground(),render()})),canvas.addEventListener("mousedown",(a=>{canvasState.S=!0,canvasState.h=a.clientX,canvasState.u=a.clientY,canvasState.velocityX=0,canvasState.velocityY=0})),canvas.addEventListener("mousemove",(a=>{if(canvasState.S){const t=a.clientX-canvasState.h,e=a.clientY-canvasState.u;canvasState.offsetX=Math.min(Math.max(canvasState.offsetX-t,0),gameFieldWidth-canvas.width),canvasState.offsetY=Math.min(Math.max(canvasState.offsetY-e,0),gameFieldHeight-canvas.height),canvasState.velocityX=t,canvasState.velocityY=e,canvasState.h=a.clientX,canvasState.u=a.clientY}})),canvas.addEventListener("mouseup",(()=>{canvasState.S=!1})),canvas.addEventListener("mouseleave",(()=>{canvasState.S=!1})),canvas.addEventListener("touchstart",(a=>{const t=a.touches[0];t.clientX,canvasState.offsetX,t.clientY,canvasState.offsetY;canvasState.S=!0,canvasState.h=t.clientX,canvasState.u=t.clientY,canvasState.velocityX=0,canvasState.velocityY=0})),canvas.addEventListener("touchmove",(a=>{if(!canvasState.S)return;const t=a.touches[0],e=t.clientX-canvasState.h,n=t.clientY-canvasState.u;canvasState.offsetX-=e,canvasState.offsetY-=n;const s=gameFieldWidth-canvas.width,c=gameFieldHeight-canvas.height;canvasState.offsetX=Math.max(0,Math.min(canvasState.offsetX,s)),canvasState.offsetY=Math.max(0,Math.min(canvasState.offsetY,c)),canvasState.velocityX=e,canvasState.velocityY=n,canvasState.h=t.clientX,canvasState.u=t.clientY,a.preventDefault()})),canvas.addEventListener("touchend",(()=>{canvasState.S=!1})),applyInertia(),document.getElementById("checkCenterButton").addEventListener("click",(()=>{const a=canvas.width/2+canvasState.offsetX,t=canvas.height/2+canvasState.offsetY;let e=!1;for(let n=0;n<canvasState.points.length;n++){const s=canvasState.points[n],{x:c,y:i,F:o}=s,v=o.p.width*o.scale,r=o.p.height*o.scale,S=c-v/2,h=i-r/2;if(a>=S-50&&a<=S+v+50&&t>=h-50&&t<=h+r+50&&o.o){e=!0,showBearFoundMessage(a,t),canvasState.points.splice(n,1),triggerFlashEffect();break}}e?setTimeout(checkIfAllBearsFound,300):triggerRedBorderEffect()}));